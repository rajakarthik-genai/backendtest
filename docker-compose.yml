

networks:
  meditwin_network:
    driver: bridge

volumes:
  mongo-data:
  redis-data:
  
  etcd_data:
  minio_data:
  milvus_data:
  neo4j-data:   

services:
  # ────────────────── FastAPI / LangChain backend ──────────────────
  backend:
    build:
      context: .
      dockerfile: backend_RAG.dockerfile
    image: digital-twin-backend:latest
    container_name: digital-twin-backend
    env_file: .env
    environment:
      - PYTHONPATH=/app
 
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
     
      milvus:
        condition: service_started
    networks: [meditwin_network]

  # ─────────────────────────── MongoDB ─────────────────────────────
  mongo:
    image: mongo:7
    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes: ["mongo-data:/data/db"]
    ports: ["27017:27017"]
    healthcheck:
      test: ["CMD", "mongosh", "--quiet",
             "-u", "${MONGO_INITDB_ROOT_USERNAME}",
             "-p", "${MONGO_INITDB_ROOT_PASSWORD}",
             "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [meditwin_network]

  # ─────────────────────────── Redis ───────────────────────────────
  redis:
    image: redis:7.0-alpine
    container_name: redis
    restart: unless-stopped
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    volumes: ["redis-data:/data"]
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [meditwin_network]


  # ───────────────── Milvus one-node stack ─────────────────────────
  etcd:
    image: bitnami/etcd:3.5.9
    container_name: etcd
    environment:
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: http://0.0.0.0:2379
      ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
    volumes: [etcd_data:/bitnami/etcd]
    healthcheck:
      test: ["CMD", "/opt/bitnami/etcd/bin/etcdctl", "endpoint", "health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [meditwin_network]

  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes: [minio_data:/data]
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [meditwin_network]

  milvus:
    image: bitnami/milvus:2.5.13
    container_name: milvus
    command: ["run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      MINIO_ACCESS_KEY_ID: minioadmin
      MINIO_SECRET_ACCESS_KEY: minioadmin
    volumes: ["milvus_data:/var/lib/milvus"]
    depends_on: [etcd, minio]
    ports:
      - "19530:19530"
      - "9091:9091"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks: [meditwin_network]
  # ─────────────────────────── Neo4j 5.x ───────────────────────────
  neo4j:
    image: neo4j:5.26
    container_name: neo4j
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}   # set NEO4J_PASSWORD in .env
      # ─── quick-start memory tuning; adjust to your host ───────────
      - NEO4J_server_memory_heap_initial__size=1g
      - NEO4J_server_memory_heap_max__size=2g
      - NEO4J_server_memory_pagecache_size=1g
    volumes: ["neo4j-data:/data"]
    ports:
      - "7474:7474"   # HTTP
      - "7687:7687"   # Bolt
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:7474 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks: [meditwin_network]